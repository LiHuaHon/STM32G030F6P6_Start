#include "FPM383C_control .h"
#include "oled.h"
#include "led.h"
#include "key.h"
#include "bsp_as608.h"
#include "stm32g0xx_it.h"
//#include "pwm.h"
//#include "timer.h"
//#include "24cxx.h" 

////extern uint8_t TouchOut_int_flag;

u8 REpassword[6]={0,0,0,0,0,0};//系统密码
u8 warning=6;//系统警告数
extern	u8 sec;
extern	u8 time_s;
extern	u8 min;
extern	u8 hou;

void Password_Menu(void) ;
void OLED_Show_Message(void);
void AutoAdd_FR(void);
void Clean_FR(void);

void TimeRSET(void){
	sec=0;
	min=0;
	hou=0;
}
// /**
//  * @brief  等待计时(最大999秒)
//  * @param  无
//  * @retval 无
//  */
//void TimeCount(u8 time){
//			TimeRSET();
//			OLED_ShowString(0,0,"Please wait",16);		
//    	OLED_ShowString(0,2,"For:",16);			
//			while(time>1){		
//    	OLED_ShowNum(24,2,time,3,16);			
//			time--;
//			}
//}

// /**
//  * @brief  错误代码
//  * @param  num 显示的错误信息
//  * @retval 无
//  */
////void TimeCount(u8 time){
////			TimeRSET();
////			OLED_ShowString(0,0,"Please wait",16);		
////    	OLED_ShowString(0,2,"For:",16);			
////			while(time>1){		
////    	OLED_ShowNum(24,2,time,3,16);			
////			time--;
////			}
////}
// /**
//  * @brief  连接测试
//  * @retval 成功返回0;
//  */
u8 FPM_Connect(void)
{
		u8 time=10;
		u8 sure=1;
		OLED_Clear();
		OLED_ShowString(0,0,"Please wait",16);		
		while (sure)
		{	
			FPM383C_Heart();
			delay_ms(500);   
			sure=Receive_Check();
			if(time==0){
				sure=0XFF;
				OLED_ShowErrMessage	(sure);
				delay_s(2);   
			return 1;
			}
				time--;
		}
		return 0;
	}
 /**
  * @brief  待机等待指纹睡眠
  * @retval 成功返回0;
  */
//u8 FPM_WaitFP(void)
//{
//		u8 time=10;
//		u8 sure=1;
//		OLED_Clear();
//		OLED_ShowString(0,0,"Please wait",16);		
//		OLED_ShowString(0,2,"For:",16);			
//		FPM383C_LED(3,6,64,10,50);//模式 颜色 占空比1 占空比2 变化速率
//		delay_ms(500);   
//		while (sure)
//		{	
//			OLED_ShowNum(24,2,time,3,16);			
//			FPM383C_Sleep();
//			delay_ms(500);   
//			sure=Receive_Check();
//			if(time==0){
//				sure=0XFF;
//				OLED_ShowErrMessage	(sure);
//				delay_s(2);   
//			return 1;
//			}
//				time--;
//		}
//			delay_ms(10);   
//		if(FMP383C_SLEEP==0){
//		return 0;
//		}else{
//			return 1;
//		}
//	}
// /**
//  * @brief  控制界面
//  * @param  无
//  * @retval 无
//  */
void OLEDShow_Page_1(void)
{
		OLED_ShowString(0,0,"Page 1",16);//显示ASCII字符的码值 	
		OLED_ShowString(16,2,"REG Finger",16);//注册指纹
		OLED_ShowString(16,4,"TEST Finger",16);//检测指纹
		OLED_ShowString(16,6,"CL ALL Finger",16);//清空指纹
		
}
void OLEDShow_Page_2(void)
{
		OLED_ShowString(0,0,"Page 2",16);//显示ASCII字符的码值 	
		OLED_ShowString(16,2,"CHA SafeLeve",16);
		OLED_ShowString(16,4,"CHA Password",16);
		OLED_ShowString(16,6,"ESP I2CTest ",16);
		
}
void OLEDShow_Page_3(void)
{
		OLED_ShowString(0,0,"Page 3",16);//显示ASCII字符的码值 	
		OLED_ShowString(16,2,"Software V1.0",16);
		OLED_ShowString(16,4,"BY-TP",16);
//		OLED_ShowNum(54,0,hou,2,16);  
//		OLED_ShowChar(74,0,':',16);
//		OLED_ShowNum(82,0,min,2,16);  
//		OLED_ShowChar(98,0,':',16);
//		OLED_ShowNum(108,0,sec,2,16);  
//	
		
}
/**
  * @brief  自动检测指纹
  * @param  无
  * @retval 0验证通过 1验证失败
  */
u8 AutoControl_FR(void)  
{  
		u16 sure=1;
		u16  ID=0;
		u16  RS=0;
		OLED_Clear();
		OLED_ShowString(0,0,"System busy",16);  
		OLED_ShowString(0,2,"Please wait",16);  
		delay_ms(10);   
		FPM383C_Matching();
		delay_ms(400);   
		sure=Finger_Check(&ID,&RS);
	
		OLED_Clear();
		OLED_ShowString(0,4,"ID:",16);  
		OLED_ShowString(0,6,"RS:",16);
		OLED_ShowNum(24,0,sure,2,16);  
		OLED_ShowNum(24,4,ID,2,16);  
		OLED_ShowNum(24,6,RS,2,16);  
	
		if(RS>=1&&ID<40&&sure==0x00){
		OPEN_DOOR();
		FPM383C_LED(1,1,1,1,1);
		delay_ms(500);  
		FPM383C_LED(1,1,1,1,1);
		delay_ms(500);  
		FPM383C_LED(1,1,1,1,1);
		delay_ms(500);  
		FPM383C_LED(1,1,1,1,1);
		delay_ms(500);  
		FPM383C_LED(3,6,64,10,50);//模式 颜色 占空比1 占空比2 变化速率
		CLOSE_DOOR();
		OLED_Clear();
		return 0;
			
		}
		else if(sure==0x00){	
		OLED_Clear();
		OLED_ShowErrMessage	(sure);
		FPM383C_LED(4,2,30,10,5);			
		delay_ms(1000);  
		FPM383C_LED(4,2,30,10,5);			
		delay_ms(1000);  
		FPM383C_LED(3,5,64,10,50);//模式 颜色 占空比1 占空比2 变化速率
		OLED_Clear();
		return 0;
		} 
		
		OLED_Clear();
		return 1;
}

/**
  * @brief  完整指纹解锁模式
  * @param  无
  * @retval 无
  */
void FPM383C_Work(void){
	
		if(FMP383C_SLEEP==1){//模块被唤醒
			
			u8 sure=1;
			u8 cs=0;
			while(sure){
				
			cs++;
			sure=AutoControl_FR();
				if(cs>=5)break;
			}
			delay_ms(200);//缓冲
			sure=1;
			cs=0;
			while(sure){
			cs++;
			FPM383C_Sleep();
			delay_ms(200);
			sure=Receive_Check();//睡眠;
				if(cs>=5)break;
			}
		}
		if(KEY_Scan(0)==KEY2_PRES_DN||KEY_Scan(0)==KEY0_PRES_UP)//按下进入密码系统
		{
	
		OLED_Clear();
			
		Password_Menu();//进入密码执行菜单
			
		OLED_Clear();
		}
		
}

/**
  * @brief  输入密码系统 密码输入正确则进入用户管理系统
  * @param  无
  * @retval 无
  */
void Password_Menu(void) 
{
	
	  u8 temp=0;
		u8 num=0;
		u8 CKpassword[6]={0};
		u8 NumFlage=0;//密码统计位
		
		OLED_ShowString(0,0,"LodingMenu",16);//
		OLED_ShowString(0,2,"EntPassword",16);//
		
		OLED_ShowNum(95,6,num,1,16);
		OLED_ShowChar(0*20+10,4,'-',16);
		OLED_ShowChar(1*20+10,4,'-',16);
		OLED_ShowChar(2*20+10,4,'-',16);
		OLED_ShowChar(3*20+10,4,'-',16);
		OLED_ShowChar(4*20+10,4,'-',16);
		OLED_ShowChar(5*20+10,4,'-',16);
		OLED_ShowChar(108,6,'<',16);
		
	while(1){
	if(time_s>=360){
		time_s=0;
		return;//超时关闭
		}
	switch((u8)KEY_Scan(0))
		{
			case KEY1_PRES_CE: 
			CKpassword[NumFlage]=num;
			OLED_ShowNum(NumFlage*20+10,4,num,1,16);
			if(NumFlage>=5){	//输入的密码已经有6位数可以进行密码比对
				
				OLED_ShowString(0,6,"SURE EntCE",16);
				OLED_ShowChar(108,6,'<',16);
				
				temp=KEY_Mode();//如果按下取消返回上一步 按下确认进入密码比对环节
				if(temp==KEY1_PRES_CE){
					
				temp=Password_Check(CKpassword);//将数据传入验证密码
					
					if(temp==1){//如果密码是正确的
					OLED_Clear();
					temp=0;
					time_s=0;
					OLED_Show_Message();
					OLED_Clear();
					return ;
					}else 
					  if(temp==0){//密码错误
						OLED_Clear();
						OLED_ShowString(0,0,"PS ERROR",16);
						delay_ms(1000);
						OLED_Clear();
						return ;
				}
				}else 
				if(temp==KEY4_PRES_CL||temp==KEY0_PRES_UP||temp==KEY2_PRES_DN)
				{
					temp=0;
					OLED_ShowString(0,6,"                ",16);
					OLED_ShowChar(108,6,'<',16);
					OLED_ShowNum(95,6,num,1,16);
				}
			}else{
			NumFlage++;
			}
			
			break;
		
			case	KEY2_PRES_DN:     
 			if(num>0){
				num--;
			}
			OLED_ShowNum(95,6,num,1,16);
//			return UP; 
			break;
			
			case  KEY0_PRES_UP:		
			if(num<9){
				num++;
			}	
			OLED_ShowNum(95,6,num,1,16);
//			return DOWN; 
			break;
			
			case KEY4_PRES_CL:		
				
			CKpassword[NumFlage]=num;
			OLED_ShowChar(NumFlage*20+10,4,'-',16);		
			if(NumFlage<=0){
				temp=KEY_Mode();
				if(temp==KEY4_PRES_CL){//如果按下取消直接结束本函数
					temp=0;
					OLED_Clear();
					while(1);
					return ;
				}
			}else{
			NumFlage--;
			}
			break;
			
			default:
				delay_ms(10);
			OLED_ShowChar(NumFlage*20+10,4,'+',16);		
		}
	}
}

//根据temp执行所需的函数
void  UserFR_OLED(u8 temp)
{	
  switch(temp)
  {
    case 2:
      AutoAdd_FR();                                      /*添加指纹*/
			OLED_Clear();
	  	OLED_ShowChar(0,temp%6,'>',16);//箭头
    break;
			
		case 4:
//      AutoCompare_FR();                                /*比对指纹*/

			OLED_Clear();
    break;
		
    case 6:
      Clean_FR();                                  /*清空指纹库*/
		
			OLED_Clear();
		
    break;
		
//		case 8:
//      Voice_S();                                  /*声音开关*/
//		
//			OLED_Clear();
//			OLED_ShowCHinese(0,2,42);		
//			OLEDShow_Page_2();
//			PS_ValidTempleteNum(&FalgeNums);//重置一下指纹数
//    break;
//		
//   case 10:
//      Safe_L();                                  /*安全等级*/
//		
//			OLED_Clear();
//			OLED_ShowCHinese(0,4,42);		
//			OLEDShow_Page_2();
//			PS_ValidTempleteNum(&FalgeNums);//重置一下指纹数
//    break;
//	 
//		case 12:
//      Password_C();                                  /*密码*/
//		
//			OLED_Clear();
//			OLED_ShowCHinese(0,6,42);		
//			OLEDShow_Page_2();
//			PS_ValidTempleteNum(&FalgeNums);//重置一下指纹数
//    break;
//		
//		case 14:
//      Face_C();                                  /*颜文字开关*/
//		
//			OLED_Clear();
//			OLED_ShowCHinese(0,2,42);		
//			OLEDShow_Page_3();
//			PS_ValidTempleteNum(&FalgeNums);//重置一下指纹数
//    break;
//		
    default:
			delay_ms(50);
    break;      
  }
  return;		
}
//// /**
////  * @brief  根据temp展示目前所在的页数
////  * @param  无
////  * @retval 无
////  */
void OLEDShow_Page(u8 temp){
		
		if(temp<7){
		OLEDShow_Page_1();
		}else if(temp>7&&temp<13){
		OLEDShow_Page_2();
		}else if(temp>13){
		OLEDShow_Page_3();
		}
}

void OLED_Show_Message(void)
{
	  static u8 temp =2;
	  u8 temp1 =2;
		OLED_Clear();
		OLEDShow_Page(temp);
		OLED_ShowChar(0,temp%6,'>',16);//箭头
	
		while(1){
			OLEDShow_Page(temp);
		 switch((u8)KEY_Mode())
		{
			case KEY1_PRES_CE: 
			UserFR_OLED(temp);
//			return OK; 
			break;
			
			case KEY0_PRES_UP:          
				
			if(temp%6==0){
			OLED_Clear();
			}
				else
			OLED_ShowChar(0,temp%6,'>',16);//箭头
			if(temp>2){
				temp-=2;
			}
				else 
				{
					temp=18;
				}
			OLED_Clear();//这样子会避免字体重叠的BUG但是系统延迟会提升
			OLEDShow_Page(temp);
			if(temp%6==0)
			OLED_ShowChar(0,6,'>',16);//箭头
				else
			OLED_ShowChar(0,temp%6,'>',16);//箭头
				
//			return UP; 
			break;
			
			case KEY2_PRES_DN:		
				
			if(temp%6==0){
			OLED_Clear();
			}
				else
			OLED_ShowChar(0,temp%6,'>',16);
			if(temp<18){
			temp+=2;
			}
				else 
				{
					temp=2;	
				}
			OLED_Clear();//这样子会避免字体重叠的BUG但是系统延迟会提升
			OLEDShow_Page(temp);
			if(temp%6==0)
			OLED_ShowChar(0,6,'>',16);//箭头
				else
			OLED_ShowChar(0,temp%6,'>',16);//箭头
				
//			return DOWN; 
			break;
			
			case KEY4_PRES_CL:		
				OLED_Clear();
				
			
				OLED_ShowString(0,0,"Ent CL",16);
				OLED_ShowString(0,2,"Close menu ",16);
				temp1=KEY_Mode();//如果按下取消返回上一步 按下确认进入密码比对环节
				if(temp1==KEY4_PRES_CL){
				return ; 
				}
			break;
			
			default:
				delay_ms(10);
 	}
	}
}
//////花里胡哨的功能 1开0关
////void FakeSleep(u8 key){
////	if(key==0)return;
////	if(time_s>=60&&time_s<120){
////		OLED_Clear();
////		Face_KAIXIN(0);
////			while(1){
////				if(time_s>=121){
////						OLED_Clear();
////						break;
////					}
////				if(FingerFalge==1){//指纹唤醒
////				AutoControl_FR();
////				ZhuJieMian();//验证完后启动主界面
////				time_s=0;
////				break;
////				}else if(KEY_Scan(1)!=0){//按键唤醒
////				time_s=0;	
////				OLED_Clear();
////				ZhuJieMian();
////				break;
////				}
////			}
////		}
////	if(time_s>=120&&time_s<540){
////				OLED_Clear();
////				Face_SHUIJIAO();
////					while(1){
////					if(time_s>=541){
////						OLED_Clear();
////						break;
////					}
////					OLED_ShowChar(105,0,' ',16);//
////					OLED_ShowChar(118,0,' ',16);//
////					delay_ms(400);
////							if(FingerFalge==1){//指纹唤醒
////							AutoControl_FR();
////							ZhuJieMian();//验证完后启动主界面
////							time_s=0;
////							break;
////							}else if(KEY_Scan(1)!=0){//按键唤醒
////							time_s=0;	
////							OLED_Clear();
////							ZhuJieMian();
////							break;
////							}	
////					delay_ms(400);
////					OLED_ShowChar(105,0,'z',16);//
////							if(FingerFalge==1){//指纹唤醒
////							AutoControl_FR();
////							ZhuJieMian();//验证完后启动主界面
////							time_s=0;
////							break;
////							}else if(KEY_Scan(1)!=0){//按键唤醒
////							time_s=0;	
////							OLED_Clear();
////							ZhuJieMian();
////							break;
////							}	
////					delay_ms(400);
////					OLED_ShowChar(118,0,'Z',16);//
////							if(FingerFalge==1){//指纹唤醒
////							AutoControl_FR();
////							ZhuJieMian();//验证完后启动主界面
////							time_s=0;
////							break;
////							}else if(KEY_Scan(1)!=0){//按键唤醒
////							time_s=0;	
////							OLED_Clear();
////							ZhuJieMian();
////							break;
////							}			
////					delay_ms(400);
////			
////					}
////			}	
////		if(time_s>=540){
////				while(1){
////							time_s=30;
////							OLED_Clear();
////							if(FingerFalge==1){//指纹唤醒
////							AutoControl_FR();
////							ZhuJieMian();//验证完后启动主界面
////							time_s=0;
////							break;
////							}else if(KEY_Scan(1)!=0){//按键唤醒
////							time_s=0;	
////							OLED_Clear();
////							ZhuJieMian();
////							break;
////							}	
////						}
////				}
////}
/////**
////  * @brief  完整指纹解锁模式
////  * @param  无
////  * @retval 无
////  */
////void AS608_Work(){
////	
////		AutoFRFalge =1; 
////	
////		if(AutoFRFalge==1&&FingerFalge==1){//检测到指纹就开始检测开门
////		time_s=0;
////		AutoControl_FR();
////		ZhuJieMian();//验证完后启动主界面
////		}
////		
////		if(KEY_Scan(0)==OK)//OK确定键按下进入密码系统
////		{
////		time_s=0;
////		BE_Start(2);
////		AutoFRFalge=0;//关闭指纹传感器	
////		OLED_Clear();
////			
////		Password_Menu();//进入密码执行菜单
////			
////		AutoFRFalge =1;//执行完毕后再重新开启指纹传感器
////		OLED_Clear();
////		ZhuJieMian();
////		}
////		FakeSleep(1);//开启花里胡哨的待机功能
////		
////		OLED_ShowNum(108,0,FalgeNums,2,16);
////		OLED_ShowNum(108,2,warning,2,16);
////}
/////**
////  * @brief  检测与指纹模块的通信
////  * @param  无
////  * @retval 无
////  */
////void  Connect_Test(void)
////{   
////	u8 ok1=0;
////	u8 ok2=0;
////	u8 ok3=0;
////	LEDR_ON();
////	while(1){
////		if(ok1&&ok2&&ok3==1)
////		{
////			LEDR_OFF();
////			OLED_Clear();
////			ChuShiHuaChengGon();
////			delay_ms(500);
////			OLED_Clear();
////			return;
////		}
////		if(PS_Connect(&AS608_Addr))                      /*与AS608串口通信*/
////		{ 
////			delay_ms(500);
////		}
////		else{
////		ok1=1;
////		}
////		if(PS_ValidTempleteNum(&FalgeNums))                      /*返回指纹数*/
////		{ 
////			delay_ms(500);
////		}
////		else{
////		ok2=1;
////		}
////		if(Print_Data())                      /*与AT24C02通信*/
////		{ 
////			delay_ms(500);
////		}
////		else{
////		ok3=1;
////		}
////	}
////}

void Countdown(u8 time,u8 Line)  
{  
	OLED_ShowString(0,Line,"Countdown",16);
	while(time>=1){
	OLED_ShowNum(80,Line,time--,2,16);
	delay_s(1);
	}
}
/**
  * @brief  自动注册指纹
  * @param  无
  * @retval 无
  */

void AutoAdd_FR(void)  
{  
	
  uint16_t  sure;
	uint16_t percentage;
	OLED_Clear();
	
	sure=FPM_Connect();
	if(sure!=0){
	return;
	}
	OLED_ShowString(0,0,"Put your finger",16);
	OLED_ShowString(0,2,"on FPM",16);
	Countdown(2,6) ;
	OLED_Clear();
  FPM383C_AutoREG(1,6);
	OLED_ShowString(0,0,"Lift again and  push on FPM",16);
	OLED_ShowString(0,4,"Until 100%",16);
	OLED_ShowString(0,6,"Now PM>",16);
	OLED_ShowString(58,6,"000",16);
	OLED_ShowString(82,6,"%",16);
	while(1){
	delay_ms(300);
  sure=Receive_REGCheck(&percentage);
	OLED_ShowNum(58,6,percentage,3,16);
		
	if(percentage==0x64){//录入完成
	delay_s(1);
	OLED_Clear();
	OLED_ShowString(0,0,"Success",16);
	delay_s(2);
	break;
	}else if(sure==0x0F){
	OLED_Clear();
	OLED_ShowString(0,0,"Fingerprint already exists",16);
	delay_s(2);
	return ;
	}
	
	}
 
}
/**
  * @brief  检测指纹测试
  * @param  无
  * @retval 无
  */
void AutoCompare_FR(void)  
{  
		u16 sure=1;
		u16  ID=0;
		u16  RS=0;
		OLED_Clear();
		OLED_ShowString(0,0,"Put your finger",16);
		OLED_ShowString(0,2,"on FPM",16);
		Countdown(2,6) ;
		OLED_Clear();
		OLED_ShowString(0,0,"System busy",16);  
		OLED_ShowString(0,2,"Please wait",16);  
		delay_ms(10);   
		FPM383C_Matching();
		delay_ms(400);   
		sure=Finger_Check(&ID,&RS);
	
		OLED_Clear();
		OLED_ShowString(0,4,"ID:",16);  
		OLED_ShowString(0,6,"RS:",16);
		OLED_ShowNum(24,0,sure,2,16);  
		OLED_ShowNum(24,4,ID,2,16);  
		OLED_ShowNum(24,6,RS,2,16);  
  sure=PS_Identify(&ID);
	
  if(sure == 0x00)
  {
		OLED_Clear();
		
		
		OLED_ShowCHinese(0,0,35);//检
		OLED_ShowCHinese(18,0,36);//测
		OLED_ShowCHinese(36,0,37);//指
		OLED_ShowCHinese(54,0,38);//纹
		OLED_ShowCHinese(72,0,6);//成
		OLED_ShowCHinese(90,0,26);//功
		OLED_ShowString(0,2,"ID",16);
		OLED_ShowNum(18,2,ID,3,16);
		
		
		delay_ms(1000);
  }
	else  
	{
		OLED_ShowErrMessage(sure);
		
		delay_ms(1000);
	}
 
}
/////**
////  * @brief  自动检测指纹
////  * @param  无
////  * @retval 无
////  */

////void AutoControl_FR(void)  
////{  
////  u8 sure;
////	
////  uint16_t  ID;
////	OLED_Clear();
////	DenDaiJianCheZiWen();
////	
////		while(1)
////		if(PS_Connect(&AS608_Addr))                      /*与AS608串口通信*/
////		{ 
////			delay_ms(100);
////		}
////		else{
////		break;
////		}
////		
////  sure=PS_Identify(&ID);
////  if(sure == 0x00)
////  {
////		OLED_Clear();
////		OLED_ShowString(46,6,"ID",16);
////		OLED_ShowNum(64,6,ID,3,16);
////		Face_KAIXIN(4);
////		OLED_ShowCHinese(28,0,67);//欢
////		OLED_ShowCHinese(46,0,68);//迎
////		OLED_ShowCHinese(64,0,69);//使
////		OLED_ShowCHinese(82,0,70);//用
////		OLED_ShowCHinese(28,2,71);//门
////		OLED_ShowCHinese(46,2,72);//锁
////		OLED_ShowCHinese(64,2,73);//已
////		OLED_ShowCHinese(82,2,74);//开
////		BE_Start(2);//叫两声
////	  Motor_Start(2);//开门
////		OLED_Clear();
////		warningCount=0;//清空警告数
////		warning=0;
////  }
////	else  
////	{
////		if(sure==(0X08)||sure==(0X09))//这两个代码是检测到不存在指纹库的指纹 警告数应当加1
////		{
////		warning++;
////		OLED_ShowErrMessage(sure);
////		BE_Start(4);//叫4声
////		delay_ms(500);
////		delay_ms(500);
////		FingerFalge=0;
////		TC_Tik=0;
////		OLED_Clear();
////			
////		}else{
////		BE_Start(3);//叫3声
////		OLED_Clear();
////		OLED_ShowErrMessage(sure);
////		OLED_ShowCHinese(36,4,45);//请
////		OLED_ShowCHinese(54,4,46);//重
////		OLED_ShowCHinese(72,4,47);//试
////		delay_ms(500);
////		delay_ms(500);
////		delay_ms(500);
////		delay_ms(500);
////		OLED_Clear();
////		FingerFalge=0;
////		TC_Tik=0;
////		}
////		
////	}
//// 
////}

/**
  * @brief  清空指纹库
  * @param  无
  * @retval 无
  */
void Clean_FR(void) 
{
	uint16_t  sure;
	u8   temp=0;
	OLED_Clear();
	OLED_ShowChar(0,0,'=',16);	
	OLED_ShowString(36,0,"WARNING",16);
	OLED_ShowChar(110,0,'=',16);	
	OLED_ShowString(0,2,"Clean FRLib ",16);	
	OLED_ShowString(0,4,"Pleace Press OK ",16);	
	OLED_ShowString(0,6,"Click 11",16);	
	OLED_ShowChar(74,6,'>',16);	
	OLED_ShowNum(104,6,0,2,16);
	while(temp<=11){//判断点击次数
		if(KEY_Mode()==KEY1_PRES_CE){
			temp++;
		}
		else if(KEY_Mode()==KEY4_PRES_CL){
			return;
		}
	OLED_ShowNum(104,6,temp,2,16);
	}
	FPM383C_CL();
	delay_ms(500);
	sure=Receive_Check();     
	
	if(sure == 0x00)
		{
			OLED_Clear();		
			OLED_ShowString(36,2,"SUCCESS",16);
			delay_ms(1000);
		}
	else 
		{
		OLED_Clear();
		OLED_ShowErrMessage(sure);
		delay_ms(1000);
		}
	
}
/////**
////  * @brief  密码输入模块检查
////  * @param  无
////  * @retval 0 输入错误  1输入有误
////  */
u8 Password_Check(u8 *CKP) 
{
	u8 i=0;
		while(i<=5){
		if(REpassword[i]!=CKP[i])	{
		warning+=5;//密码不一致 5级警告
		return 0;//密码不一致
		}
		i++;
		}
		return 1;
		//密码一致
}
/////**
////  * @brief  输入密码系统 密码输入正确则进入用户管理系统
////  * @param  无
////  * @retval 无
////  */
////void Password_Menu(void) 
////{
////	
////	  u8 temp=0;
////		u8 num=0;
////		u8 CKpassword[6]={0};
////		u8 NumFlage=0;//密码统计位
////		OLED_ShowCHinese(0,0,91);//登录界面
////		OLED_ShowCHinese(18,0,92);//
////		OLED_ShowCHinese(36,0,93);//
////		OLED_ShowCHinese(52,0,94);//
////		
////		OLED_ShowCHinese(0,6,49);//输
////		OLED_ShowCHinese(18,6,50);//人
////		OLED_ShowCHinese(36,6,20);//的
////		OLED_ShowCHinese(52,6,51);//密
////		OLED_ShowCHinese(70,6,52);//码
////		OLED_ShowCHinese(110,6,41);
////		OLED_ShowNum(95,6,num,1,16);
////		OLED_ShowChar(0*20+10,4,'-',16);
////		OLED_ShowChar(1*20+10,4,'-',16);
////		OLED_ShowChar(2*20+10,4,'-',16);
////		OLED_ShowChar(3*20+10,4,'-',16);
////		OLED_ShowChar(4*20+10,4,'-',16);
////		OLED_ShowChar(5*20+10,4,'-',16);
////		
////	while(1){
////	if(time_s>=360){
////		time_s=0;
////		return;//超时关闭
////		}
////	switch((u8)KEY_Scan(0))
////		{
////			case OK: 
////			CKpassword[NumFlage]=num;
////			OLED_ShowNum(NumFlage*20+10,4,num,1,16);
////			if(NumFlage>=5){	//输入的密码已经有6位数可以进行密码比对
////				
////				OLED_ShowString(0,6,"                 ",16);
////				OLED_ShowCHinese(0,6,53);//确
////				OLED_ShowCHinese(18,6,54);//认
////				OLED_ShowCHinese(36,6,51);//密
////				OLED_ShowCHinese(52,6,52);//码
////				OLED_ShowString(72,6,"OK",16);
////				
////				temp=KEY_Mode();//如果按下取消返回上一步 按下确认进入密码比对环节
////				if(temp==OK){
////					
////				temp=Password_Check(CKpassword);//将数据传入验证密码
////					
////					if(temp==1){//如果密码是正确的
////					OLED_Clear();
////					temp=0;
////					BE_Start(2);//叫2声
////					time_s=0;
////					OLED_Show_Message();
////					OLED_Clear();
////					return ;
////					}else 
////					  if(temp==0){//密码错误
////						OLED_Clear();
////						OLED_ShowCHinese(0,0,51);//密
////						OLED_ShowCHinese(18,0,52);//码
////						OLED_ShowCHinese(36,0,11);//错
////						OLED_ShowCHinese(54,0,12);//误
////						BE_Start(5);//叫5声
////						delay_ms(1000);
////						OLED_Clear();
////						return ;
////				}
////				}else 
////				if(temp==CANCEL||temp==UP||temp==DOWN)
////				{
////					temp=0;
////					OLED_ShowCHinese(0,6,49);//输00
////					OLED_ShowCHinese(18,6,50);//人
////					OLED_ShowCHinese(36,6,20);//的
////					OLED_ShowCHinese(52,6,51);//密
////					OLED_ShowCHinese(70,6,52);//码
////					OLED_ShowCHinese(110,6,41);
////					OLED_ShowNum(95,6,num,1,16);
////				}
////			}else{
////			NumFlage++;
////			}
////			
////			break;
////		
////			case	DOWN:     
//// 			if(num>0){
////				num--;
////			}
////			OLED_ShowNum(95,6,num,1,16);
//////			return UP; 
////			break;
////			
////			case  UP:		
////			if(num<9){
////				num++;
////			}	
////			OLED_ShowNum(95,6,num,1,16);
//////			return DOWN; 
////			break;
////			
////			case CANCEL:		
////				
////			CKpassword[NumFlage]=num;
////			OLED_ShowChar(NumFlage*20+10,4,'-',16);		
////			if(NumFlage<=0){
////				temp=KEY_Mode();
////				if(temp==CANCEL){//如果按下取消直接结束本函数
////					temp=0;
////					OLED_Clear();
////					return ;
////				}
////			}else{
////			NumFlage--;
////			}
////			break;
////			
////			default:
////				delay_ms(10);
////			OLED_ShowChar(NumFlage*20+10,4,'+',16);		
////		}
////	}
////}
//////颜文字设置
////void  Face_C(void){
////		OLED_Clear();
////		//YANWENZI
////		OLED_ShowCHinese(0,0,119);//
////		OLED_ShowCHinese(18,0,120);//
////		OLED_ShowCHinese(36,0,121);//
////		OLED_ShowCHinese(18,4,42);//箭头
////		while(1){
////		if(FaceFlage==1)
////		OLED_ShowCHinese(36,4,89);//开
////		else
////		OLED_ShowCHinese(36,4,90);//关
////			switch(KEY_Mode()){
////				case OK:
////					FaceFlage=!FaceFlage;//取反捏
////				break;
////			
////			case CANCEL:
////					Writing_Data();//存储程序
////					return;//退出程序
////			
////			default:
////				delay_ms(10);
////			}	
////		}
////}

//////声音设置函数
////void Voice_S(void){
////	
////		OLED_Clear();
////		OLED_ShowCHinese(0,0,81);//声音设置
////		OLED_ShowCHinese(18,0,82);//
////		OLED_ShowCHinese(36,0,83);//
////		OLED_ShowCHinese(52,0,84);//
////		OLED_ShowCHinese(18,4,42);//箭头
////		while(1){
////		if(BE_Flage==1)
////		OLED_ShowCHinese(36,4,89);//开
////		else
////		OLED_ShowCHinese(36,4,90);//关
////			switch(KEY_Mode()){
////				case OK:
////					BE_Flage=!BE_Flage;//取反捏
////				break;
////			
////			case CANCEL:
////					Writing_Data();//存储程序
////					return;//退出程序
////			
////			default:
////				delay_ms(10);
////			}	
////		}
////}
//////安全等级设置函数
////void Safe_L(void){
////	
////		OLED_Clear();
////		OLED_ShowCHinese(0,0,85);//安全等级
////		OLED_ShowCHinese(18,0,86);//
////		OLED_ShowCHinese(36,0,87);//
////		OLED_ShowCHinese(54,0,88);//
////		OLED_ShowCHinese(0,6,39);//箭头
////		OLED_ShowCHinese(108,6,40);//箭头
////		while(1){
////		OLED_ShowNum(36,4,safeAS,3,16);
////			switch(KEY_Mode()){
////				case UP:
////					if(safeAS<=254)
////						safeAS++;
////					else BE_Start(3);
////				break;
////				
////				case DOWN:
////					if(safeAS>=2)
////						safeAS--;
////					else BE_Start(3);
////				break;
////			
////			case CANCEL:
////					Writing_Data();//存储程序
////					return;//退出程序
////			
////			}	
////		}
////}
//////修改密码函数
////void Password_C(){
////		u8 temppassword[6]={0};
////		u8 NumFlage=0;//密码统计位
////		u8 num=0;
////		u8 	temp;
////	
////		OLED_Clear();
////		OLED_ShowCHinese(18,0,51);//密码设置
////		OLED_ShowCHinese(36,0,52);//
////		OLED_ShowCHinese(54,0,83);//
////		OLED_ShowCHinese(72,0,84);//
////		OLED_ShowCHinese(0,6,49);//输
////		OLED_ShowCHinese(18,6,50);//人
////		OLED_ShowCHinese(36,6,20);//的
////		OLED_ShowCHinese(52,6,51);//密
////		OLED_ShowCHinese(70,6,52);//码
////		OLED_ShowCHinese(110,6,41);
////		OLED_ShowNum(95,6,num,1,16);
////		OLED_ShowChar(0*20+10,4,'-',16);
////		OLED_ShowChar(1*20+10,4,'-',16);
////		OLED_ShowChar(2*20+10,4,'-',16);
////		OLED_ShowChar(3*20+10,4,'-',16);
////		OLED_ShowChar(4*20+10,4,'-',16);
////		OLED_ShowChar(5*20+10,4,'-',16);
////	
////	while(1)	
////	switch((u8)KEY_Mode())
////		{
////			case OK: 
////			temppassword[NumFlage]=num;
////			OLED_ShowNum(NumFlage*20+10,4,num,1,16);
////			if(NumFlage>=5){	//输入的密码已经有6位数可以进行密码比对
////						OLED_ShowString(0,6,"                 ",16);
////						OLED_ShowCHinese(0,6,53);//确
////						OLED_ShowCHinese(18,6,54);//认
////						OLED_ShowCHinese(36,6,51);//密
////						OLED_ShowCHinese(52,6,52);//码
////						OLED_ShowString(72,6,"OK",16);
////						temp=KEY_Mode();//如果按下取消返回上一步 
////						if(temp==OK){
////						//确认了密码	就把temppassword存到REpassword里存到AT里
////							temp=0;
////							while(temp<=5){
////							REpassword[temp]=temppassword[temp];
////							temp++;
////							}
////							Writing_Data();
////							return;//结束勒
////						}else if(temp==CANCEL)
////								{
////									OLED_ShowCHinese(0,6,49);//输
////									OLED_ShowCHinese(18,6,50);//人
////									OLED_ShowCHinese(36,6,20);//的
////									OLED_ShowCHinese(52,6,51);//密
////									OLED_ShowCHinese(70,6,52);//码
////									OLED_ShowCHinese(110,6,41);
////									OLED_ShowNum(95,6,num,1,16);
////								}
////			}else{
////			NumFlage++;//还没有6位数 可以继续加捏
////			}
////			break;

////			case UP:     
//// 			if(num>0){
////				num--;
////			}
////			OLED_ShowNum(95,6,num,1,16);
////			break;
////			
////			case DOWN:		
////			if(num<9){
////				num++;
////			}	
////			OLED_ShowNum(95,6,num,1,16);
////			break;
////			
////			case CANCEL:		//去除密码捏
////			temppassword[NumFlage]=num;
////			OLED_ShowChar(NumFlage*20+10,4,'-',16);		
////			if(NumFlage<=0){
////				if(KEY_Mode()==CANCEL){//如果按下取消直接结束本函数
////					temp=0;
////					OLED_Clear();
////					return ;
////				}
////			}else{
////			NumFlage--;
////			}
////			break;
////			
////			default:
////				delay_ms(10);
////		}
////	
////}
/////*********************************************END OF FILE**********************/
